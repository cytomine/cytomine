plugins {
    id 'java-library'
    id 'io.freefair.lombok' version '6.6.1'
    id 'maven-publish'
    id 'signing'
    id "io.github.gradle-nexus.publish-plugin" version "2.0.0-rc-1"
}

group 'com.cytomine'
version '0.0.0'  // do NOT change this, this will be automatically changed by CI

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'net.jodah:expiringmap:0.5.10'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    implementation 'org.apache.commons:commons-compress:1.25.0'
    implementation 'org.slf4j:slf4j-api:2.0.9'
    testImplementation 'ch.qos.logback:logback-classic:1.4.14'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
        options.addStringOption('Xdoclint:none', '-quiet')
        options.addBooleanOption('quiet', true)
        options.addBooleanOption('warnings', false)
    }
    options.encoding = "UTF-8"
    failOnError = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = "registry-client"
            from components.java
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }

            pom {
                name = 'registry-client'
                packaging = 'jar'
                // optionally artifactId can be defined here
                description = 'A Java client for connecting to the API of a Docker registry v2.'
                url = 'http://github.com/cytomine/registry-client'

                scm {
                    url = 'https://github.com/cytomine/registry-client.git'
                    connection = 'scm:git:https://github.com/cytomine/registry-client.git'
                    developerConnection = 'scm:git:https://github.com/cytomine/registry-client.git'
                }

                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }

                developers {
                    developer {
                        id = 'ya-b'
                        name = 'yangbo'
                        email = 'ya-b@outlook.com'
                    }
                    developer {
                        id = 'cytomine'
                        name = 'cytominedev'
                        email = 'dev@cytomine.com'
                    }
                }
            }
        }
    }
}

nexusPublishing {
    repositories {
        create("comcytomine") {
            nexusUrl = uri("https://s01.oss.sonatype.org/service/local/")
            snapshotRepositoryUrl = uri("https://s01.oss.sonatype.org/content/repositories/snapshots/")
            username = ossrhUsername
            password = ossrhPassword
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}

static def updateReadMeVersion(String ver) {
    var file = new File("README.md")
    var content = new String(file.readBytes())
    var newContent = content.replaceAll("<version>\\d+\\.\\d+\\.\\d+</version>", "<version>$ver</version>")
    if (newContent != content) {
        file.write(newContent)
    }
}
