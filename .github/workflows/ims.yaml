name: IMS

on:
  pull_request:
    branches:
      - master
    paths:
      - "pims/**/*.py"
      - "pims/tests/**"
      - ".github/**"
  push:
    branches:
      - master

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: ./pims

env:
  IMAGE_NAME: pims
  REPORT: test-report.xml
  REGISTRY: ghcr.io

jobs:
  build-docker-image:
    runs-on: self-hosted
    permissions:
      contents: read
      packages: write

    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build pims image
        uses: docker/build-push-action@v4
        with:
          context: pims
          file: pims/docker/backend.dockerfile
          labels: ${{ steps.meta.outputs.labels }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}

  tests:
    runs-on: self-hosted
    needs: 
      - build-docker-image

    container:
      image: ${{ needs.build-docker-image.outputs.tags }}
      credentials:
        username: ${{ github.actor }}
        password: ${{ github.token }}

    steps:
      - name: Set up the repository
        uses: actions/checkout@v4

      - name: Set up pytest
        run: pip install pytest httpx

      - name: Run tests
        run: pytest tests --junitxml=${{ env.REPORT }}

      - name: Upload tests report
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.REPORT }}
          path: ${{ env.REPORT }}
          retention-days: 1

  remove-docker-image:
    runs-on: self-hosted
    needs:
      - tests

    steps:
      - name: Delete pims test image from registry
        uses: actions/github-script@v6
        with:
          script: |
            try {
              github.rest.packages.deletePackageForOrg({
                org: context.repo.owner,
                package_type: "container",
                package_name: "pims",
              });
            } catch (error) {
              core.setFailed(error.message);
            }
