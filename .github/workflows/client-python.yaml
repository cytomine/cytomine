name: Client Python

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    working-directory: ./clients/python

jobs:
  lint:
    runs-on: self-hosted

    steps:
      - name: Set up the repository
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ vars.UV_VERSION }}

      - name: Lint
        run: uv run ruff check

  type-check:
    runs-on: self-hosted

    steps:
      - name: Set up the repository
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ vars.UV_VERSION }}

      - name: Check type
        run: uv run mypy cytomine tests

  check-version:
    if: github.ref_name == 'main' && github.event_name == 'push'
    runs-on: self-hosted
    outputs:
      changed: ${{ steps.check.outputs.changed }}

    steps:
      - name: Set up the repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 2

      - name: Check version change
        id: check
        run: |
          CURRENT_VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
          PREVIOUS_VERSION=$(git show HEAD~1:clients/python/pyproject.toml | grep '^version = ' | sed 's/version = "\(.*\)"/\1/' || echo "")

          if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
          else
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "Version unchanged"
          fi

  publish:
    if: needs.check-version.outputs.changed == 'true'
    needs: check-version
    runs-on: self-hosted

    steps:
      - name: Set up the repository
        uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          version: ${{ vars.UV_VERSION }}

      - name: Build package
        run: uv build

      - name: Publish package
        run: uv publish
